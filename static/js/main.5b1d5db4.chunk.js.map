{"version":3,"sources":["serviceWorkerRegistration.js","state/selectors.js","config.js","state/reducers/tutorial.js","state/reducers/game.js","state/reducers/options.js","vectors.js","state/reducers/selection.js","state/store.js","state/reducers/highscore.js","components/Square.js","components/DraggingOverlay.js","components/GridDraggingOverlay.js","components/ClickOverlay.js","components/GridClickOverlay.js","components/Board.js","components/BackLink.js","components/Menu.js","components/Game.js","components/Title.js","components/Tutorial.js","components/HueSlider.js","components/Options.js","components/About.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getSelection","selection","getStreak","game","streak","getBoard","isTutorial","getTutorialBoard","board","getScore","score","isGameActive","createSelector","getGame","active","getStreakType","type","getStreakCount","count","getSelectedSquares","squares","getSelectionSize","size","isSelectionHidden","hidden","isBoardLocked","getSquare","index","includes","inactive","length","ready","getTutorialMessage","tutorial","message","step","getOptions","options","getInputMode","inputMode","getHues","hues","TITLE_URL","GAME_URL","OPTIONS_URL","TUTORIAL_URL","ABOUT_URL","defaultTutorial","defaultGame","bucket","INPUT_MODE_TOUCH","INPUT_MODE_CLICK","defaultHues","Array","fill","defaultOptions","tween","r","x","y","rotate90","times","rotate90Around","curry","center","v","add","sub","distance","x2","y2","Math","hypot","defaultSelection","toIndex","isValid","getType","typeEquals","isValidType","createSelectionSlice","set","resetSelection","produce","updateSelection","start","end","newSelection","uniq","range","map","filter","equals","hideSelection","getRandom","min","max","reduce","values","_","random","value","splice","persist","configurePersist","storage","localStorage","useStore","create","devtools","key","allowlist","get","highscore","updateHighscore","createHighscoreSlice","startTutorial","endTutorial","advanceTutorial","createTutorialSlice","initGame","replaceSquares","indexes","pop","streakCount","createGameSlice","changeHue","hue","resetHues","changeInputMode","createOptionsSlice","a","delay","assureGame","BOARD_HEIGHT","startGame","Square","square","style","block","mods","Object","entries","name","val","className","join","DraggingOverlay","isLocked","onDragUpdate","onDragEnd","onDragAbort","zIndex","ref","useRef","useState","dragStart","setDragStart","height","position","width","abortDragging","onPointerDown","event","getPosition","startDragging","onPointerUp","onPointerMove","updatePosition","onPointerCancel","onPointerLeave","onPointerOut","onLostPointerCapture","current","getBoundingClientRect","offsetX","offsetY","pageX","pageY","offsetWidth","offsetHeight","GridDraggingOverlay","gridWidth","gridHeight","lastEnd","setLastEnd","gridStart","gridEnd","ClickOverlay","onClick","onMouseMove","GridClickOverlay","setStart","setEnd","gridPosition","Board","getIsBoardLocked","BackLink","children","props","Menu","getIsGameActive","streakType","to","Game","isActive","useEffect","Title","squareStyle","Tutorial","HueSlider","pos","Options","sliders","About","href","history","createHashHistory","ReactDOM","render","StrictMode","exact","path","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5b1d5db4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSelector } from \"reselect\";\n\nconst getSelection = (state) => state.selection;\nconst getStreak = (state) => state.game && state.game.streak;\n\nexport const getGame = (state) => state.game;\nexport const getBoard = (state) => {\n  return isTutorial(state)\n    ? getTutorialBoard(state)\n    : state.game && state.game.board;\n};\nexport const getBucket = (state) => state.game && state.game.bucket;\nexport const getScore = (state) => state.game && state.game.score;\nexport const getHighscore = (state) => state.highscore;\n\n// game\n\nexport const isGameActive = createSelector(\n  (state) => !!getGame(state),\n  (active) => active\n);\n\n// stats\n\nexport const getStreakType = createSelector(\n  getStreak,\n  (streak) => streak && streak.type\n);\n\nexport const getStreakCount = createSelector(\n  getStreak,\n  (streak) => streak && streak.count\n);\n\n// board\n\nexport const getSelectedSquares = createSelector(\n  getSelection,\n  (selection) => selection.squares\n);\n\nexport const getSelectionSize = createSelector(\n  getSelection,\n  (selection) => selection.size\n);\n\nexport const isSelectionHidden = createSelector(\n  getSelection,\n  (selection) => selection.hidden\n);\n\nexport const isBoardLocked = createSelector(\n  isSelectionHidden,\n  (hidden) => hidden\n);\n\nexport const getSquare = (index) =>\n  createSelector(\n    getBoard,\n    getSelectedSquares,\n    isSelectionHidden,\n    (board, squares, hidden) => {\n      const active = squares.includes(index);\n\n      return {\n        type: board && board[index],\n        active,\n        inactive: squares.length > 0 && !active,\n        hidden: hidden && active,\n        ready: squares.length === 4 && active,\n      };\n    }\n  );\n\n// tutorial\n\nexport const getTutorialMessage = (state) =>\n  state.tutorial.message[state.tutorial.step];\n\nexport const getTutorialBoard = (state) =>\n  state.tutorial.board[state.tutorial.step];\n\nexport const isTutorial = (state) => state.tutorial.active;\n\n// options\n\nconst getOptions = (state) => state.options;\n\nexport const getInputMode = createSelector(\n  getOptions,\n  (options) => options.inputMode\n);\n\nexport const getHues = createSelector(getOptions, (options) => options.hues);\n","// Dimensions and types exist to have named constants. Changing them requires more work.\nexport const BOARD_HEIGHT = 7;\nexport const BOARD_HEIGHT_TUTORIAL = 5;\nexport const BOARD_WIDTH = 7;\nexport const SQUARE_TYPES = 3;\n\nexport const TITLE_URL = \"/\";\nexport const GAME_URL = \"/play\";\nexport const OPTIONS_URL = \"/options\";\nexport const TUTORIAL_URL = \"/tutorial\";\nexport const ABOUT_URL = \"/about\";\n","import produce from \"immer\";\n\nexport const defaultTutorial = {\n  active: false,\n  board: [\n    [\n      3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3,\n      1, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    ],\n    [\n      3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3,\n      3, 3, 3, 3, 3, 3, 3, 0, 3, 3,\n    ],\n    [\n      3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 0, 0,\n      3, 3, 3,\n\n      3, 3, 3, 3, 3, 3, 3,\n    ],\n    [\n      3, 0, 3, 3, 3, 1, 3, 3, 2, 1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3,\n      1, 2, 1, 3, 2, 1, 3, 2, 2, 3,\n    ],\n  ],\n  message: [\n    `Welcome!\n         Find a square with corners of the same color and remove it by connecting two opposite corners.`,\n    `Squares have different sizes and orientations. Removing bigger squares yields a higher score.`,\n    `Removing multiple squares of the same color in a row  will multiply your score.`,\n    `The game won’t tell you when there aren’t any squares left to remove.\n         You have to call it quits.\n         Enjoy!`,\n  ],\n  step: 0,\n};\n\nexport const createTutorialSlice = (set) => ({\n  tutorial: defaultTutorial,\n  startTutorial: () =>\n    set(\n      produce((state) => {\n        state.tutorial.step = 0;\n        state.tutorial.active = true;\n      })\n    ),\n  endTutorial: () =>\n    set(\n      produce((state) => {\n        state.tutorial.active = false;\n      })\n    ),\n  advanceTutorial: () =>\n    set(\n      produce((state) => {\n        state.tutorial.step += 1;\n      })\n    ),\n});\n","import produce from \"immer\";\nimport { getSelectedSquares, getSelectionSize } from \"../selectors\";\n\nconst defaultGame = {\n  board: null,\n  bucket: [],\n  score: 0,\n  streak: null,\n};\n\nexport const createGameSlice = (set) => ({\n  game: null,\n  initGame: (board) =>\n    set(\n      produce((state) => {\n        state.game = { ...defaultGame, board };\n      })\n    ),\n  replaceSquares: (values, bucket) =>\n    set(\n      produce((state) => {\n        const indexes = getSelectedSquares(state);\n        const size = getSelectionSize(state);\n        const type = state.game.board[indexes[0]];\n\n        for (const index of indexes) {\n          state.game.board[index] = values.pop();\n        }\n\n        const streakCount =\n          state.game.streak && state.game.streak.type === type\n            ? state.game.streak.count + 1\n            : 1;\n        state.game.score = state.game.score + (size | 0) * streakCount;\n        state.game.streak = {\n          count: streakCount,\n          type,\n        };\n        state.game.bucket = bucket;\n      })\n    ),\n});\n","import { SQUARE_TYPES } from \"../../config\";\nimport produce from \"immer\";\n\nexport const INPUT_MODE_TOUCH = \"TOUCH\";\nexport const INPUT_MODE_CLICK = \"CLICK\";\n\nexport const defaultHues = Array(SQUARE_TYPES).fill(0);\n\nexport const defaultOptions = {\n  hues: defaultHues,\n  inputMode: INPUT_MODE_TOUCH,\n};\n\nexport const createOptionsSlice = (set) => ({\n  options: defaultOptions,\n  changeHue: (index, hue) =>\n    set(\n      produce((state) => {\n        const hues = [...state.options.hues];\n        hues[index] = hue;\n\n        state.options.hues = hues;\n      })\n    ),\n  resetHues: () =>\n    set(\n      produce((state) => {\n        state.options.hues = defaultHues;\n      })\n    ),\n  changeInputMode: () =>\n    set(\n      produce((state) => {\n        state.options.inputMode =\n          state.options.inputMode === INPUT_MODE_CLICK\n            ? INPUT_MODE_TOUCH\n            : INPUT_MODE_CLICK;\n      })\n    ),\n});\n","import curry from \"ramda/src/curry\";\n\nexport const add = ({ x, y }, { x: x2, y: y2 }) => ({ x: x + x2, y: y + y2 });\n\nexport const sub = ({ x, y }, { x: x2, y: y2 }) => ({ x: x - x2, y: y - y2 });\n\nexport const tween = ({ x, y }, { x: x2, y: y2 }, r) => ({\n  x: x * r + x2 * (1 - r),\n  y: y * r + y2 * (1 - r),\n});\n\nexport const rotate90 = ({ x, y }, times) =>\n  times ? rotate90({ x: y, y: -x }, times - 1) : { x, y };\n\nexport const rotate90Around = curry((center, v, times) =>\n  add(rotate90(sub(v, center), times), center)\n);\n\nexport const distance = ({ x, y }, { x: x2, y: y2 }) =>\n  Math.hypot(x - x2, y - y2);\n","import curry from \"ramda/src/curry\";\nimport equals from \"ramda/src/equals\";\nimport range from \"ramda/src/range\";\nimport uniq from \"ramda/src/uniq\";\nimport { SQUARE_TYPES, BOARD_WIDTH } from \"../../config\";\nimport { distance, rotate90Around, tween } from \"../../vectors\";\nimport produce from \"immer\";\nimport { getBoard } from \"../selectors\";\n\nexport const defaultSelection = {\n  squares: [],\n  size: 0,\n  hidden: false,\n};\n\nconst getSelection = (board, start, end) => ({\n  ...defaultSelection,\n  size: distance(start, end),\n  squares: uniq(\n    range(0, 4)\n      .map(rotate90Around(tween(start, end, 0.5), start))\n      .filter(isValid(board))\n      .filter(isValidType(board))\n      .filter(typeEquals(board, getType(board, start)))\n      .map(toIndex)\n  ),\n});\n\nconst toIndex = curry(({ x, y }) => x + y * BOARD_WIDTH);\nconst isValid = curry(\n  (board, { x, y }) =>\n    0 <= x &&\n    x < BOARD_WIDTH &&\n    x % 1 === 0 &&\n    0 <= y &&\n    y < board.length / BOARD_WIDTH &&\n    y % 1 === 0\n);\nconst getType = (board, v) => board[toIndex(v)];\nconst typeEquals = curry((board, type, v) => getType(board, v) === type);\nconst isValidType = curry((board, v) => getType(board, v) < SQUARE_TYPES);\n\nexport const createSelectionSlice = (set) => ({\n  selection: defaultSelection,\n  resetSelection: () =>\n    set(\n      produce((state) => {\n        state.selection = defaultSelection;\n      })\n    ),\n  updateSelection: (start, end) =>\n    set(\n      produce((state) => {\n        const newSelection = getSelection(getBoard(state), start, end);\n\n        if (!equals(newSelection.squares, state.selection.squares)) {\n          state.selection = newSelection;\n        }\n      })\n    ),\n  hideSelection: () =>\n    set(\n      produce((state) => {\n        if (state.selection.squares.length < 4) {\n          state.selection = defaultSelection;\n        } else {\n          state.selection.hidden = true;\n        }\n      })\n    ),\n});\n","import create from \"zustand\";\nimport { createHighscoreSlice } from \"./reducers/highscore\";\nimport { createTutorialSlice } from \"./reducers/tutorial\";\nimport { devtools } from \"zustand/middleware\";\nimport { createGameSlice } from \"./reducers/game\";\nimport { createOptionsSlice } from \"./reducers/options\";\nimport { createSelectionSlice } from \"./reducers/selection\";\nimport {\n  getBucket,\n  isGameActive,\n  isSelectionHidden,\n  isTutorial,\n} from \"./selectors\";\nimport delay from \"delay\";\nimport { BOARD_HEIGHT, BOARD_WIDTH } from \"../config\";\nimport { configurePersist } from \"zustand-persist\";\n\nfunction getRandom(bucket, count, min = 0, max = 3, size = 2) {\n  return [...Array(count)].reduce(\n    ([values, bucket]) => {\n      bucket = [...bucket];\n\n      if (bucket.length === 0) {\n        bucket = [...Array((max - min) * size)].map((_, index) => {\n          return (index % (max - min)) + min;\n        });\n      }\n\n      const index = (Math.random() * bucket.length) | 0;\n      const value = bucket.splice(index, 1)[0];\n\n      return [[...values, value], bucket];\n    },\n    [[], bucket]\n  );\n}\n\nconst { persist } = configurePersist({\n  storage: localStorage,\n});\n\nexport const useStore = create(\n  devtools(\n    persist(\n      { key: \"quood\", allowlist: [\"game\", \"highscore\", \"options\"] },\n      (set, get) => ({\n        ...createHighscoreSlice(set, get),\n        ...createTutorialSlice(set, get),\n        ...createGameSlice(set, get),\n        ...createOptionsSlice(set, get),\n        ...createSelectionSlice(set, get),\n        match: async () => {\n          get().hideSelection();\n\n          await delay(0);\n\n          if (!isSelectionHidden(get())) {\n            return;\n          }\n\n          await delay(500);\n\n          if (isTutorial(get())) {\n            get().advanceTutorial();\n          } else {\n            const [values, bucket] = getRandom(getBucket(get()), 4);\n\n            get().replaceSquares(values, bucket);\n\n            await delay(0);\n\n            get().updateHighscore();\n          }\n\n          get().resetSelection();\n        },\n        assureGame: () => {\n          if (!isGameActive(get())) {\n            const [values] = getRandom([], BOARD_HEIGHT * BOARD_WIDTH);\n\n            get().initGame(values);\n          }\n        },\n        startGame: () => {\n          const [values] = getRandom([], BOARD_HEIGHT * BOARD_WIDTH);\n\n          get().initGame(values);\n        },\n      })\n    )\n  )\n);\n","import produce from \"immer\";\nimport { getScore } from \"../selectors\";\n\nexport const createHighscoreSlice = (set) => ({\n  highscore: 0,\n  updateHighscore: () =>\n    set(\n      produce((state) => {\n        state.highscore = Math.max(state.highscore, getScore(state));\n      })\n    ),\n});\n","import React from \"react\";\nimport { getSquare, getHues } from \"../state/selectors\";\nimport { useStore } from \"../state/store\";\n\nexport default function Square({ index }) {\n  const [hues, square] = useStore((state) => [\n    getHues(state),\n    getSquare(index)(state),\n  ]);\n  const style = {\n    filter: `hue-rotate(${hues[square.type]}deg)`,\n  };\n\n  const block = \"square\";\n  const mods = Object.entries(square)\n    .filter(([_, value]) => value !== false)\n    .map(([name, val]) => `${block}_${name}${val === true ? \"\" : \"_\" + val}`);\n  const className = [block, ...mods].join(\" \");\n\n  return <button className={className} style={style} />;\n}\n","import React, { useRef, useState } from \"react\";\n\nexport function DraggingOverlay({\n  isLocked = false,\n  onDragUpdate,\n  onDragEnd = () => {},\n  onDragAbort = () => {},\n  zIndex = 10000,\n}) {\n  const ref = useRef();\n  const [dragStart, setDragStart] = useState(null);\n\n  const style = {\n    height: \"100%\",\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex,\n  };\n\n  function startDragging(event) {\n    if (isLocked) {\n      return;\n    }\n\n    const position = getPosition(event, ref);\n\n    setDragStart(position);\n    onDragUpdate(position, position);\n  }\n\n  function finishDragging() {\n    if (isLocked || !dragStart) {\n      return;\n    }\n\n    setDragStart(null);\n    onDragEnd();\n  }\n\n  function abortDragging() {\n    if (isLocked || !dragStart) {\n      return;\n    }\n\n    setDragStart(null);\n    onDragAbort();\n  }\n\n  function updatePosition(event) {\n    if (dragStart) {\n      onDragUpdate(dragStart, getPosition(event, ref));\n    }\n  }\n\n  return (\n    <div\n      style={style}\n      touch-action=\"none\"\n      onPointerDown={(event) => startDragging(event)}\n      onPointerUp={(event) => finishDragging(event)}\n      onPointerMove={(event) => updatePosition(event)}\n      onPointerCancel={() => abortDragging()}\n      onPointerLeave={() => abortDragging()}\n      onPointerOut={() => abortDragging()}\n      onLostPointerCapture={() => abortDragging()}\n      ref={ref}\n    ></div>\n  );\n}\n\nfunction getPosition(event, ref) {\n  const { x: offsetX, y: offsetY } = ref.current.getBoundingClientRect();\n  const { pageX, pageY } = event;\n  const { offsetWidth, offsetHeight } = ref.current;\n  const x = (pageX - offsetX) / offsetWidth;\n  const y = (pageY - offsetY) / offsetHeight;\n\n  return { x, y };\n}\n","import React, { useState } from \"react\";\nimport { DraggingOverlay } from \"./DraggingOverlay\";\n\nexport function GridDraggingOverlay({\n  gridWidth,\n  gridHeight,\n  isLocked,\n  onDragAbort,\n  onDragEnd,\n  onDragUpdate,\n}) {\n  const [lastEnd, setLastEnd] = useState(null);\n\n  function dragUpdate(start, end) {\n    const gridStart = {\n      x: (start.x * gridWidth) | 0,\n      y: (start.y * gridHeight) | 0,\n    };\n    const gridEnd = {\n      x: (end.x * gridWidth) | 0,\n      y: (end.y * gridHeight) | 0,\n    };\n\n    if (lastEnd && end.x === lastEnd.x && end.y === lastEnd.y) {\n      return;\n    }\n\n    setLastEnd(end);\n\n    onDragUpdate(gridStart, gridEnd);\n  }\n\n  function dragAbort() {\n    setLastEnd(null);\n\n    onDragAbort();\n  }\n\n  function dragEnd() {\n    setLastEnd(null);\n\n    onDragEnd();\n  }\n\n  return (\n    <DraggingOverlay\n      onDragAbort={dragAbort}\n      onDragEnd={dragEnd}\n      onDragUpdate={dragUpdate}\n      isLocked={isLocked}\n    />\n  );\n}\n","import React, { useRef } from \"react\";\n\nexport default function ClickOverlay({\n  onClick,\n  onMouseMove = () => {},\n  zIndex = 10000,\n}) {\n  const ref = useRef();\n\n  const style = {\n    height: \"100%\",\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex,\n  };\n\n  function click(event) {\n    onClick(getPosition(event, ref));\n  }\n\n  function mouseMove(event) {\n    onMouseMove(getPosition(event, ref));\n  }\n\n  return (\n    <div onClick={click} onMouseMove={mouseMove} ref={ref} style={style}></div>\n  );\n}\n\nfunction getPosition(event, ref) {\n  const { x: offsetX, y: offsetY } = ref.current.getBoundingClientRect();\n  const { pageX, pageY } = event;\n  const { offsetWidth, offsetHeight } = ref.current;\n  const x = (pageX - offsetX) / offsetWidth;\n  const y = (pageY - offsetY) / offsetHeight;\n\n  return { x, y };\n}\n","import React, { useState } from \"react\";\nimport ClickOverlay from \"./ClickOverlay\";\n\nexport default function GridClickOverlay({\n  gridWidth,\n  gridHeight,\n  onDragAbort,\n  onDragEnd,\n  onDragUpdate,\n  isLocked,\n}) {\n  const [start, setStart] = useState(null);\n  const [end, setEnd] = useState(null);\n\n  function click(position) {\n    if (isLocked) {\n      return;\n    }\n\n    const gridPosition = {\n      x: (position.x * gridWidth) | 0,\n      y: (position.y * gridHeight) | 0,\n    };\n\n    if (!start) {\n      setStart(gridPosition);\n      setEnd(gridPosition);\n      onDragUpdate(gridPosition, gridPosition);\n    } else if (gridPosition.x === start.x && gridPosition.y === start.y) {\n      setStart(null);\n      setEnd(null);\n      onDragAbort();\n    } else {\n      setStart(null);\n      setEnd(null);\n      onDragEnd();\n    }\n  }\n\n  function mouseMove(position) {\n    if (isLocked || !start) {\n      return;\n    }\n\n    const gridPosition = {\n      x: (position.x * gridWidth) | 0,\n      y: (position.y * gridHeight) | 0,\n    };\n\n    if (end && gridPosition.x === end.x && gridPosition.y === end.y) {\n      return;\n    }\n\n    setEnd(gridPosition);\n\n    onDragUpdate(start, gridPosition);\n  }\n\n  return <ClickOverlay onClick={click} onMouseMove={mouseMove}></ClickOverlay>;\n}\n","import React from \"react\";\nimport range from \"ramda/src/range\";\nimport {\n  isBoardLocked as getIsBoardLocked,\n  getInputMode,\n} from \"../state/selectors\";\nimport { BOARD_WIDTH, BOARD_HEIGHT_TUTORIAL, BOARD_HEIGHT } from \"../config\";\nimport Square from \"./Square\";\nimport { GridDraggingOverlay } from \"./GridDraggingOverlay\";\nimport { INPUT_MODE_TOUCH, INPUT_MODE_CLICK } from \"../state/reducers/options\";\nimport GridClickOverlay from \"./GridClickOverlay\";\nimport { useStore } from \"../state/store\";\n\nexport default function Board({ isTutorial = false }) {\n  const { isBoardLocked, inputMode, match, resetSelection, updateSelection } =\n    useStore((state) => ({\n      isBoardLocked: getIsBoardLocked(state),\n      inputMode: getInputMode(state),\n      match: state.match,\n      resetSelection: state.resetSelection,\n      updateSelection: state.updateSelection,\n    }));\n  const height = isTutorial ? BOARD_HEIGHT_TUTORIAL : BOARD_HEIGHT;\n\n  const squares = range(0, height * BOARD_WIDTH).map((index) => {\n    return (\n      <div className=\"board__square\" key={index}>\n        <Square index={index} />\n      </div>\n    );\n  });\n\n  return (\n    <div className={`board${isTutorial ? \" board_tutorial\" : \"\"}`}>\n      {inputMode === INPUT_MODE_TOUCH && (\n        <GridDraggingOverlay\n          gridWidth={BOARD_WIDTH}\n          gridHeight={height}\n          onDragEnd={() => match()}\n          onDragUpdate={(start, end) => updateSelection(start, end)}\n          onDragAbort={() => resetSelection()}\n          isLocked={isBoardLocked}\n        />\n      )}\n      {inputMode === INPUT_MODE_CLICK && (\n        <GridClickOverlay\n          gridWidth={BOARD_WIDTH}\n          gridHeight={height}\n          onDragEnd={() => match()}\n          onDragUpdate={(start, end) => updateSelection(start, end)}\n          onDragAbort={() => resetSelection()}\n          isLocked={isBoardLocked}\n        />\n      )}\n\n      {squares}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction BackLink({ children, onClick = () => {}, ...props }) {\n  return (\n    <Link {...props} onClick={onClick}>\n      {children || \"Back\"}\n    </Link>\n  );\n}\n\nexport default BackLink;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  isGameActive as getIsGameActive,\n  getScore,\n  getStreakType,\n  getStreakCount,\n  getHues,\n} from \"../state/selectors\";\nimport { OPTIONS_URL, TITLE_URL } from \"../config\";\nimport BackLink from \"./BackLink\";\nimport { useStore } from \"../state/store\";\n\nfunction Menu() {\n  const { highscore, hues, isGameActive, score, streakCount, streakType } =\n    useStore((state) => ({\n      highscore: state.highscore,\n      hues: getHues(state),\n      isGameActive: getIsGameActive(state),\n      score: getScore(state),\n      streakCount: getStreakCount(state),\n      streakType: getStreakType(state),\n    }));\n\n  if (!isGameActive) {\n    return null;\n  }\n\n  const style = {\n    filter: `hue-rotate(${hues[streakType]}deg)`,\n  };\n\n  function getStats() {\n    return (\n      <>\n        <div className=\"stat\">\n          <div className=\"stat__title\">Score</div>\n          <div className=\"stat__value\">{score}</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"stat__title\">Streak</div>\n          {streakCount > 0 && (\n            <>\n              <div className=\"stat__square\">\n                <div\n                  className={`square square_type_${streakType}`}\n                  style={style}\n                />\n              </div>\n              <div className=\"stat__value\">{streakCount}</div>\n            </>\n          )}\n        </div>\n        <div className=\"stat\">\n          <div className=\"stat__title\">Highscore</div>\n          <div className=\"stat__value\">{highscore}</div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"menu\">{getStats()}</div>\n      <div className=\"main-menu\">\n        <div className=\"main-menu__action\">\n          <BackLink to={TITLE_URL} />\n        </div>\n        <div className=\"main-menu__action\">\n          <Link to={OPTIONS_URL}>Options</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Menu;\n","import React, { useEffect } from \"react\";\nimport { isGameActive } from \"../state/selectors\";\nimport Board from \"./Board\";\nimport Menu from \"./Menu\";\nimport { useStore } from \"../state/store\";\n\nfunction Game() {\n  const { isActive, assureGame, resetSelection } = useStore((state) => ({\n    isActive: isGameActive(state),\n    assureGame: state.assureGame,\n    resetSelection: state.resetSelection,\n  }));\n\n  useEffect(() => {\n    assureGame();\n    resetSelection();\n  }, [assureGame, resetSelection]);\n\n  if (!isActive) {\n    return null;\n  }\n\n  return (\n    <>\n      <Board />\n      <Menu />\n    </>\n  );\n}\n\nexport default Game;\n","import range from \"ramda/src/range\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  GAME_URL,\n  TUTORIAL_URL,\n  BOARD_HEIGHT,\n  BOARD_WIDTH,\n  ABOUT_URL,\n} from \"../config\";\nimport { getHues } from \"../state/selectors\";\nimport { useStore } from \"../state/store\";\n\nfunction Title() {\n  const hues = useStore(getHues);\n  const squareStyle = {\n    filter: `hue-rotate(${hues[1]}deg)`,\n  };\n\n  const squares = range(0, BOARD_HEIGHT * BOARD_WIDTH).map((index) => {\n    return (\n      <div className=\"board__square\" key={index}>\n        <div className=\"square square_type_1\" style={squareStyle} />\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"board board_title\">\n        <div className=\"board__title\">Quood</div>\n\n        {squares}\n      </div>\n\n      <div className=\"main-menu\">\n        <div className=\"main-menu__action\">\n          <Link to={GAME_URL}>Play</Link>\n        </div>\n        <div className=\"main-menu__action\">\n          <Link to={ABOUT_URL}>About</Link>\n        </div>\n        <div className=\"main-menu__action\">\n          <Link to={TUTORIAL_URL}>Tutorial</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Title;\n","import React, { useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { TITLE_URL } from \"../config\";\nimport BackLink from \"./BackLink\";\nimport { useStore } from \"../state/store\";\nimport { getTutorialMessage } from \"../state/selectors\";\n\nfunction Tutorial() {\n  const [endTutorial, message, resetSelection, startTutorial] = useStore(\n    (state) => [\n      state.endTutorial,\n      getTutorialMessage(state),\n      state.resetSelection,\n      state.startTutorial,\n    ]\n  );\n\n  useEffect(() => {\n    startTutorial();\n    resetSelection();\n    return endTutorial;\n  }, [endTutorial, resetSelection, startTutorial]);\n\n  return (\n    <>\n      <Board isTutorial={true} />\n      <div className=\"menu\">\n        <div className=\"message\">{message}</div>\n      </div>\n      <div className=\"main-menu\">\n        <div className=\"main-menu__action\">\n          <BackLink to={TITLE_URL} />\n        </div>\n        <div className=\"main-menu__action main-menu__action_inactive\" />\n      </div>\n    </>\n  );\n}\n\nexport default Tutorial;\n","import React from \"react\";\nimport { getHues, getInputMode } from \"../state/selectors\";\nimport { DraggingOverlay } from \"./DraggingOverlay\";\nimport { INPUT_MODE_TOUCH, INPUT_MODE_CLICK } from \"../state/reducers/options\";\nimport ClickOverlay from \"./ClickOverlay\";\nimport { useStore } from \"../state/store\";\n\nexport default function HueSlider({ index }) {\n  const { changeHue, hue, inputMode } = useStore((state) => ({\n    changeHue: state.changeHue,\n    hue: getHues(state)[index],\n    inputMode: getInputMode(state),\n  }));\n  const style = {\n    filter: `hue-rotate(${hue}deg)`,\n  };\n\n  function onDragUpdate(_, end) {\n    changeHue(index, (end.x * 360) | 0);\n  }\n\n  function onClick(pos) {\n    changeHue(index, (pos.x * 360) | 0);\n  }\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider__square\">\n        <div className={`square square_type_${index}`} style={style} />\n      </div>\n      <div className=\"slider__bar-border\">\n        {inputMode === INPUT_MODE_TOUCH && (\n          <DraggingOverlay onDragUpdate={onDragUpdate} />\n        )}\n        {inputMode === INPUT_MODE_CLICK && <ClickOverlay onClick={onClick} />}\n        <div className=\"slider__bar\" style={{ width: `${hue / 3.6}%` }}></div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport range from \"ramda/src/range\";\nimport { SQUARE_TYPES, GAME_URL } from \"../config\";\nimport HueSlider from \"./HueSlider\";\nimport { getInputMode } from \"../state/selectors\";\nimport { INPUT_MODE_TOUCH } from \"../state/reducers/options\";\nimport BackLink from \"./BackLink\";\nimport { useStore } from \"../state/store\";\n\nfunction Options() {\n  const { changeInputMode, inputMode, startGame, resetHues } = useStore(\n    (state) => ({\n      changeInputMode: state.changeInputMode,\n      inputMode: getInputMode(state),\n      startGame: state.startGame,\n      resetHues: state.resetHues,\n    })\n  );\n  const sliders = range(0, SQUARE_TYPES).map((type) => {\n    return <HueSlider key={type} index={type} />;\n  });\n\n  return (\n    <>\n      <div className=\"menu\">\n        <div className=\"menu__block\">\n          <div className=\"options-headline\">Input Mode</div>\n          <button className=\"action\" onClick={() => changeInputMode()}>\n            {inputMode === INPUT_MODE_TOUCH ? \"Touch\" : \"Click\"}\n          </button>\n        </div>\n        <div className=\"menu__block\">\n          <div className=\"options-headline\">Square Colors</div>\n          {sliders}\n          <button className=\"action\" onClick={() => resetHues()}>\n            Reset\n          </button>\n        </div>\n      </div>\n      <div className=\"main-menu\">\n        <div className=\"main-menu__action\">\n          <BackLink to={GAME_URL} />\n        </div>\n        <div className=\"main-menu__action\">\n          <BackLink to={GAME_URL} onClick={() => startGame()}>\n            Restart\n          </BackLink>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Options;\n","import React from \"react\";\nimport { TITLE_URL } from \"../config\";\nimport BackLink from \"./BackLink\";\n\nfunction About() {\n  return (\n    <>\n      <div className=\"menu\">\n        <div className=\"menu__block\">\n          <div className=\"message\">Quood Version 2.0.0</div>\n          <div className=\"message\">By Rebecca König</div>\n        </div>\n        <div className=\"menu__block\">\n          <div className=\"message\">\n            <a href=\"https://github.com/veu/rquood\">Source Code</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-menu\">\n        <div className=\"main-menu__action\">\n          <BackLink to={TITLE_URL} />\n        </div>\n        <div className=\"main-menu__action main-menu__action_inactive\" />\n      </div>\n    </>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Route, Router } from \"react-router\";\nimport { createHashHistory } from \"history\";\nimport \"pepjs\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport Game from \"./components/Game\";\nimport Title from \"./components/Title\";\nimport Tutorial from \"./components/Tutorial\";\nimport {\n  TITLE_URL,\n  GAME_URL,\n  TUTORIAL_URL,\n  OPTIONS_URL,\n  ABOUT_URL,\n} from \"./config\";\nimport Options from \"./components/Options\";\nimport About from \"./components/About\";\n\nconst history = createHashHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Switch>\n        <Route exact path={TITLE_URL} render={() => <Title />} />\n        <Route exact path={GAME_URL} render={() => <Game />} />\n        <Route exact path={TUTORIAL_URL} render={() => <Tutorial />} />\n        <Route exact path={OPTIONS_URL} render={() => <Options />} />\n        <Route exact path={ABOUT_URL} render={() => <About />} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}