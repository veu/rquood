{"version":3,"sources":["serviceWorker.js","state/reducers/game.js","state/reducers/highscore.js","config.js","state/reducers/options.js","vectors.js","state/reducers/selection.js","state/reducers/tutorial.js","state/reducers.js","state/actions.js","state/selectors.js","sagas.js","components/Square.js","components/DraggingOverlay.js","components/GridDraggingOverlay.js","components/Board.js","components/Menu.js","components/Game.js","components/Title.js","components/Tutorial.js","components/Slider.js","components/Options.js","index.js","components/CustomProperties.js"],"names":["Boolean","window","location","hostname","match","defaultGame","board","bucket","score","streak","gameReducers","handleActions","START_GAME","_","_ref","payload","Object","objectSpread","REPLACE_SQUARES","game","_ref2","_ref2$payload","indexes","values","size","toConsumableArray","type","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","pop","err","return","streakCount","count","highscoreReducers","UPDATE_HIGHSCORE","highscore","Math","max","BOARD_SIZE","SQUARE_TYPES","TITLE_URL","GAME_URL","OPTIONS_URL","TUTORIAL_URL","defaultHues","Array","fill","defaultOptions","hues","optionsReducers","CHANGE_HUE","options","_ref$payload","index","hue","RESET_HUES","rotate90Around","curry","center","v","times","x","y","add","rotate90","_ref7","_ref3","_ref4","sub","defaultSelection","squares","hidden","selectionReducers","UPDATE_SELECTION","selection","start","end","newSelection","getSelection","equals","DISCARD_SELECTION","HIDE_SELECTION","length","ADVANCE_TUTORIAL","_ref8","_ref9","x2","y2","hypot","distance","uniq","range","map","_ref5","_ref6","r","tween","filter","isValid","isValidType","typeEquals","getType","toIndex","defaultTutorial","message","step","tutorialReducers","tutorial","patchReducer","state","createActions","REQUEST_ASSURE_GAME","REQUEST_START_GAME","requestAssureGame","requestStartGame","startGame","replaceSquares","updateSelection","discardSelection","hideSelection","updateHighscore","advanceTutorial","changeHue","resetHues","getStreak","getBoard","router","pathname","getBucket","getScore","getHighscore","isGameActive","createSelector","getGame","active","getStreakType","getStreakCount","getSelectedSquares","getSelectionSize","isSelectionHidden","isBoardLocked","getSquare","includes","inactive","ready","isTutorial","getTutorialMessage","getHues","onHideSelection","onReplaceSquares","onRequestStartGame","onRequestAssureGame","getRandom","min","arguments","reduce","slicedToArray","random","splice","concat","_getRandom","_getRandom2","regenerator_default","a","wrap","_context","prev","select","sent","abrupt","call","delay","put","stop","_marked","this","_context2","_marked2","_getRandom3","_getRandom4","_context3","pow","_marked3","_getRandom5","_getRandom6","_context4","_marked4","_callee","_context5","takeEvery","_marked5","Square","square","useSelector","_checkBEM","react_default","block","mods","DraggingOverlay","props","ref","useRef","_useState","useState","_useState2","dragStart","setDragStart","style","height","position","width","zIndex","abortDragging","isLocked","onDragAbort","DraggingOverlay_checkBEM","touch-action","onPointerDown","event","getPosition","onDragUpdate","startDragging","onPointerUp","onDragEnd","onPointerMove","updatePosition","onPointerCancel","onPointerLeave","onPointerOut","onLostPointerCapture","_ref$current$getBound","current","getBoundingClientRect","offsetX","offsetY","pageX","pageY","_ref$current","offsetWidth","offsetHeight","GridDraggingOverlay","lastEnd","setLastEnd","GridDraggingOverlay_checkBEM","gridStart","gridSize","gridEnd","Board","getIsBoardLocked","dispatch","useDispatch","Board_checkBEM","elem","key","Menu","getIsGameActive","streakType","Menu_checkBEM","main","Fragment","react_router_dom","to","onClick","Game","isActive","useEffect","Game_checkBEM","Title","Title_checkBEM","small","Tutorial","Tutorial_checkBEM","Slider","Slider_checkBEM","Options","sliders","Options_checkBEM","history","sagaMiddleware","createSagaMiddleware","createHashHistory","store","createStore","reduceReducers","combineReducers","connectRouter","compose","persistState","slicer","paths","persist","applyMiddleware","routerMiddleware","run","saga","ReactDOM","render","src_checkBEM","es","esm","children","properties","fromPairs","CustomProperties_checkBEM","react_router","exact","path","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d32c562.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\n\nconst defaultGame = {\n    board: null,\n    bucket: [],\n    score: 0,\n    streak: null,\n};\n\nconst gameReducers = handleActions({\n    START_GAME: (_, {payload: {board}}) => {\n        return {\n            ...defaultGame,\n            board,\n        };\n    },\n    REPLACE_SQUARES: (game, {payload: {indexes, values, size, bucket}}) => {\n        const board = [...game.board];\n        const type = board[indexes[0]];\n\n        for (const index of indexes) {\n            board[index] = values.pop();\n        }\n\n        const streakCount = game.streak && game.streak.type === type ? game.streak.count + 1 : 1;\n        const score = game.score + (size | 0) * streakCount;\n        const streak = {\n            count: streakCount,\n            type,\n        };\n\n        return {\n            board,\n            bucket,\n            score,\n            streak,\n        }\n    }\n}, null);\n\nexport default gameReducers;\n","import { handleActions } from 'redux-actions';\n\nconst highscoreReducers = handleActions({\n    UPDATE_HIGHSCORE: (highscore, { payload: { score } }) => {\n        return Math.max(highscore, score);\n    }\n}, 0);\n\nexport default highscoreReducers;\n","// Size and types exist to have named constants. Changing them requires more work.\nexport const BOARD_SIZE = 7;\nexport const SQUARE_TYPES = 3;\n\nexport const TITLE_URL = '/';\nexport const GAME_URL = '/play';\nexport const OPTIONS_URL = '/options';\nexport const TUTORIAL_URL = '/tutorial';\n","import { handleActions } from 'redux-actions';\nimport { SQUARE_TYPES } from '../../config';\n\nexport const defaultHues = Array(SQUARE_TYPES).fill(0);\n\nexport const defaultOptions = {\n    hues: defaultHues,\n};\n\nconst optionsReducers = handleActions({\n    CHANGE_HUE: (options, { payload: { index, hue } }) => {\n        const hues = [...options.hues];\n        hues[index] = hue;\n\n        return {\n            ...options,\n            hues\n        };\n    },\n    RESET_HUES: (options) => {\n        return {\n            ...options,\n            hues: defaultHues,\n        };\n    }\n}, defaultOptions);\n\nexport default optionsReducers;\n","import curry from 'ramda/src/curry';\n\nexport const add = ({x, y}, {x: x2, y: y2}) => ({x: x + x2, y: y + y2});\n\nexport const sub = ({x, y}, {x: x2, y: y2}) => ({x: x - x2, y: y - y2});\n\nexport const tween = ({x, y}, {x: x2, y: y2}, r) => ({x: x * r + x2 * (1 - r), y: y * r + y2 * (1 - r)});\n\nexport const rotate90 = ({x, y}, times) => times ? rotate90({x: y, y: -x}, times - 1) : {x, y};\n\nexport const rotate90Around = curry((center, v, times) => add(rotate90(sub(v, center), times), center));\n\nexport const distance = ({x, y}, {x: x2, y: y2}) => Math.hypot(x - x2, y - y2);\n","import curry from 'ramda/src/curry';\nimport equals from 'ramda/src/equals';\nimport range from 'ramda/src/range';\nimport uniq from 'ramda/src/uniq';\nimport { handleActions } from 'redux-actions';\nimport { BOARD_SIZE, SQUARE_TYPES } from '../../config';\nimport { distance, rotate90Around, tween } from '../../vectors';\n\nexport const defaultSelection = {\n    squares: [],\n    size: 0,\n    hidden: false,\n};\n\nexport const selectionReducers = handleActions({\n    START_GAME: () => {\n        return defaultSelection;\n    },\n    UPDATE_SELECTION: (selection, {payload: {board, start, end}}) => {\n        const newSelection = getSelection(board, start, end);\n\n        if (equals(newSelection.squares, selection.squares)) {\n            return selection;\n        }\n\n        return newSelection;\n    },\n    DISCARD_SELECTION: () => {\n        return defaultSelection;\n    },\n    HIDE_SELECTION: (selection) => {\n        if (selection.squares.length < 4) {\n            return defaultSelection;\n        }\n\n        return {\n            ...selection,\n            hidden: true,\n        };\n    },\n    REPLACE_SQUARES: () => {\n        return defaultSelection;\n    },\n    ADVANCE_TUTORIAL: () => {\n        return defaultSelection;\n    }\n}, defaultSelection);\n\nexport default selectionReducers;\n\nconst getSelection = (board, start, end) => ({\n    ...defaultSelection,\n    size: distance(start, end),\n    squares: uniq(\n        range(0, 4)\n            .map(rotate90Around(tween(start, end, 0.5), start))\n            .filter(isValid)\n            .filter(isValidType(board))\n            .filter(typeEquals(board, getType(board, start)))\n            .map(toIndex)\n    ),\n});\n\nconst toIndex = curry(({x, y}) => x + y * BOARD_SIZE);\nconst isValid = ({x, y}) =>\n    0 <= x && x < BOARD_SIZE && x % 1 === 0 &&\n    0 <= y && y < BOARD_SIZE && y % 1 === 0;\nconst getType = (board, v) => board[toIndex(v)];\nconst typeEquals = curry((board, type, v) => getType(board, v) === type);\nconst isValidType = curry((board, v) => getType(board, v) < SQUARE_TYPES);\n","import { handleActions } from 'redux-actions';\n\nexport const defaultTutorial = {\n    board: [\n        [\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 1, 3, 1, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 1, 3, 1, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n        ],\n        [\n            3, 3, 0, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 0,\n            3, 3, 3, 3, 3, 3, 3,\n            0, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 0, 3, 3,\n        ],\n        [\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 0, 0, 3, 3, 3, 3,\n            3, 0, 0, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n        ],\n        [\n            3, 0, 3, 3, 1, 3, 3,\n            3, 2, 1, 3, 3, 0, 3,\n            3, 3, 3, 3, 0, 3, 3,\n            3, 3, 3, 1, 2, 1, 0,\n            3, 2, 3, 2, 2, 3, 3,\n            3, 0, 3, 1, 3, 0, 3,\n            3, 3, 3, 3, 3, 3, 3,\n        ],\n    ],\n    message: [\n        `Hi there. Find a square with corners of the same color\n         and remove it by connecting two opposite corners.`,\n        `Squares have different sizes and orientations.\n         Remove bigger squares to yield a higher score.`,\n        `Removing multiple squares of the same color in a row\n         will multiply your score.`,\n        `The game does not stop if there are no more squares\n         to remove. It’s up to you to call it quits.`\n    ],\n    step: 0\n}\n\nconst tutorialReducers = handleActions({\n    ADVANCE_TUTORIAL: (tutorial) => {\n        return {\n            ...tutorial,\n            step: tutorial.step + 1\n        };\n    }\n}, defaultTutorial);\n\nexport default tutorialReducers;\n","import { connectRouter } from 'connected-react-router';\nimport reduceReducers from 'reduce-reducers';\nimport { combineReducers } from 'redux';\nimport gameReducers from './reducers/game';\nimport highscoreReducers from './reducers/highscore';\nimport optionsReducers from './reducers/options';\nimport selectionReducers, { defaultSelection } from './reducers/selection';\nimport tutorialReducers, { defaultTutorial } from './reducers/tutorial';\n\nfunction patchReducer(state) {\n    if (!state.selection) {\n        state = {\n            ...state,\n            selection: defaultSelection,\n            tutorial: defaultTutorial,\n        }\n    }\n\n    return state;\n}\n\nexport default (history) => reduceReducers(\n    combineReducers({\n        router: connectRouter(history),\n        game: gameReducers,\n        tutorial: tutorialReducers,\n        highscore: highscoreReducers,\n        selection: selectionReducers,\n        options: optionsReducers,\n    }),\n    patchReducer,\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n    requestAssureGame,\n    requestStartGame,\n    startGame,\n    replaceSquares,\n    updateSelection,\n    discardSelection,\n    hideSelection,\n    updateHighscore,\n    advanceTutorial,\n    changeHue,\n    resetHues,\n} = createActions({\n    REQUEST_ASSURE_GAME: () => ({\n    }),\n    REQUEST_START_GAME: () => ({\n    }),\n    START_GAME: (board) => ({\n        board,\n    }),\n    REPLACE_SQUARES: (indexes, values, size, bucket) => ({\n        indexes,\n        values,\n        size,\n        bucket,\n    }),\n    UPDATE_SELECTION: (board, start, end) => ({\n        board,\n        start,\n        end,\n    }),\n    DISCARD_SELECTION: () => ({}),\n    HIDE_SELECTION: () => ({}),\n    UPDATE_HIGHSCORE: (score) => ({\n        score\n    }),\n    ADVANCE_TUTORIAL: () => ({\n    }),\n    CHANGE_HUE: (index, hue) => ({\n        index,\n        hue,\n    }),\n    RESET_HUES: () => ({}),\n});\n","import { createSelector } from \"reselect\";\nimport { TUTORIAL_URL } from \"../config\";\n\nconst getSelection = (state) => state.selection;\nconst getStreak = (state) => state.game && state.game.streak;\n\nexport const getGame = (state) => state.game;\nexport const getBoard = (state) => {\n    if (state.router.location.pathname === TUTORIAL_URL) {\n        return state.tutorial.board[state.tutorial.step];\n    }\n\n    return state.game && state.game.board;\n}\nexport const getBucket = (state) => state.game && state.game.bucket;\nexport const getScore = (state) => state.game && state.game.score;\nexport const getHighscore = (state) => state.highscore;\n\n// game\n\nexport const isGameActive = createSelector(\n    (state) => !!getGame(state),\n    (active) => active\n);\n\n// stats\n\nexport const getStreakType = createSelector(\n    getStreak,\n    (streak) => streak && streak.type\n);\n\nexport const getStreakCount = createSelector(\n    getStreak,\n    (streak) => streak && streak.count\n);\n\n// board\n\nexport const getSelectedSquares = createSelector(\n    getSelection,\n    (selection) => selection.squares\n);\n\nexport const getSelectionSize = createSelector(\n    getSelection,\n    (selection) => selection.size\n);\n\nexport const isSelectionHidden = createSelector(\n    getSelection,\n    (selection) => selection.hidden,\n);\n\nexport const isBoardLocked = createSelector(\n    isSelectionHidden,\n    (hidden) => hidden\n);\n\nexport const getSquare = (index) => createSelector(\n    getBoard,\n    getSelectedSquares,\n    isSelectionHidden,\n    (board, squares, hidden) => {\n        const active = squares.includes(index);\n\n        return {\n            type: board && board[index],\n            active,\n            inactive: squares.length > 0 && !active,\n            hidden: hidden && active,\n            ready: squares.length === 4 && active,\n        };\n    }\n);\n\n// tutorial\n\nexport const isTutorial = (state) => state.router.location.pathname === TUTORIAL_URL;\n\nexport const getTutorialMessage = (state) => state.tutorial.message[state.tutorial.step];\n\n// options\n\nconst getOptions = (state) => state.options;\n\nexport const getHues = createSelector(\n    getOptions,\n    (options) => options.hues\n)\n","import delay from 'delay';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { replaceSquares, startGame, updateHighscore, advanceTutorial } from './state/actions';\nimport { BOARD_SIZE } from './config';\nimport { isSelectionHidden, getBucket, getScore, getSelectionSize, getSelectedSquares, isGameActive, isTutorial } from './state/selectors';\n\nfunction getRandom(bucket, count, min=0, max=3, size=2) {\n    return [...Array(count)].reduce(([values, bucket]) => {\n        bucket = [...bucket];\n\n        if (bucket.length === 0) {\n            bucket = [...Array((max - min) * size)].map((_, index) => {\n                return index % (max - min) + min;\n            });\n        }\n\n        const index = Math.random() * bucket.length | 0;\n        const value = bucket.splice(index, 1)[0];\n\n        return [[...values, value], bucket];\n    }, [[], bucket]);\n}\n\nfunction* onHideSelection() {\n    const state = yield select();\n\n    if (!isSelectionHidden(state)) {\n        return;\n    }\n\n    yield call(delay, 500);\n\n    if (isTutorial(state)) {\n        yield put(advanceTutorial());\n\n        return;\n    }\n\n    const [values, bucket] = getRandom(getBucket(state), 4);\n\n    yield put(replaceSquares(getSelectedSquares(state), values, getSelectionSize(state), bucket));\n}\n\nfunction* onReplaceSquares() {\n    const state = yield select();\n\n    yield put(updateHighscore(getScore(state)));\n}\n\nfunction* onRequestStartGame() {\n    const [values] = getRandom([], BOARD_SIZE ** 2);\n\n    yield put(startGame(values));\n}\n\nfunction* onRequestAssureGame() {\n    const state = yield select();\n\n    if (!isGameActive(state)) {\n        const [values] = getRandom([], BOARD_SIZE ** 2);\n\n        yield put(startGame(values));\n    }\n}\n\nexport default function* () {\n    yield takeEvery('HIDE_SELECTION', onHideSelection);\n    yield takeEvery('REPLACE_SQUARES', onReplaceSquares);\n    yield takeEvery('REQUEST_ASSURE_GAME', onRequestAssureGame);\n    yield takeEvery('REQUEST_START_GAME', onRequestStartGame);\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSquare } from '../state/selectors';\n\nexport default function Square({index}) {\n    const square = useSelector(getSquare(index));\n\n    return <button block=\"square\" mods={square}></button>;\n}\n","import React, {useRef, useState} from 'react';\n\nexport function DraggingOverlay(props) {\n    const ref = useRef();\n    const [dragStart, setDragStart] = useState(null);\n\n    const style = {\n        height: '100%',\n        position: 'absolute',\n        width: '100%',\n        zIndex: props.zIndex === undefined ? 10000 : props.zIndex,\n    };\n\n    function startDragging(event) {\n        if (props.isLocked) {\n            return;\n        }\n\n        const position = getPosition(event, ref);\n\n        setDragStart(position);\n        props.onDragUpdate(position, position);\n    }\n\n    function finishDragging() {\n        if (props.isLocked || !dragStart) {\n            return;\n        }\n\n        setDragStart(null);\n        props.onDragEnd();\n    }\n\n    function abortDragging() {\n        if (props.isLocked || !dragStart) {\n            return;\n        }\n\n        setDragStart(null);\n        props.onDragAbort();\n    }\n\n    function updatePosition(event) {\n        if (dragStart) {\n            props.onDragUpdate(dragStart, getPosition(event, ref));\n        }\n    }\n\n    return (\n        <div\n            style={style}\n            touch-action=\"none\"\n            onPointerDown={(event) => startDragging(event) }\n            onPointerUp={(event) => finishDragging(event) }\n            onPointerMove={(event) => updatePosition(event)}\n            onPointerCancel={() => abortDragging()}\n            onPointerLeave={() => abortDragging()}\n            onPointerOut={() => abortDragging()}\n            onLostPointerCapture={() => abortDragging()}\n            ref={ref}\n        >\n        </div>\n    );\n}\n\nfunction getPosition(event, ref) {\n    const {x: offsetX, y: offsetY} = ref.current.getBoundingClientRect();\n    const {pageX, pageY} = event;\n    const {offsetWidth, offsetHeight} = ref.current;\n    const x = (pageX - offsetX) / offsetWidth;\n    const y = (pageY - offsetY) / offsetHeight;\n\n    return {x, y};\n}\n","import React, { useState } from 'react';\nimport { DraggingOverlay } from './DraggingOverlay';\n\nexport function GridDraggingOverlay(props) {\n    const [lastEnd, setLastEnd] = useState(null);\n\n    function onDragUpdate(start, end) {\n        const gridStart = {\n            x: start.x * props.gridSize | 0,\n            y: start.y * props.gridSize | 0,\n        };\n        const gridEnd = {\n            x: end.x * props.gridSize | 0,\n            y: end.y * props.gridSize | 0,\n        };\n\n        if (lastEnd && end.x === lastEnd.x && end.y === lastEnd.y) {\n            return;\n        }\n\n        setLastEnd(end);\n\n        props.onDragUpdate(gridStart, gridEnd);\n    }\n\n    function onDragAbort() {\n        setLastEnd(null);\n\n        props.onDragAbort();\n    }\n\n    function onDragEnd() {\n        setLastEnd(null);\n\n        props.onDragEnd();\n    }\n\n    return (\n        <DraggingOverlay\n            onDragAbort={onDragAbort}\n            onDragEnd={onDragEnd}\n            onDragUpdate={onDragUpdate}\n            isLocked={props.isLocked}\n        />\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport range from 'ramda/src/range';\nimport { updateSelection, hideSelection, discardSelection } from '../state/actions';\nimport { isBoardLocked as getIsBoardLocked, getBoard } from '../state/selectors';\nimport { BOARD_SIZE } from '../config';\nimport Square from './Square';\nimport { GridDraggingOverlay } from './GridDraggingOverlay';\n\nexport default function Board() {\n    const board = useSelector(getBoard);\n    const isBoardLocked = useSelector(getIsBoardLocked);\n    const dispatch = useDispatch();\n\n    const squares = range(0, BOARD_SIZE ** 2).map((index) => {\n        return (\n            <div block=\"board\" elem=\"square\">\n                <Square\n                    key={index}\n                    index={index}\n                />\n            </div>\n        );\n    });\n\n    function handleDragUpdate(start, end) {\n        dispatch(updateSelection(board, start, end));\n    }\n\n    return (\n        <div block=\"board\">\n            <GridDraggingOverlay\n                gridSize={BOARD_SIZE}\n                onDragEnd={() => dispatch(hideSelection())}\n                onDragUpdate={handleDragUpdate}\n                onDragAbort={() => dispatch(discardSelection())}\n                isLocked={isBoardLocked}\n            />\n\n            {squares}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { requestStartGame } from '../state/actions';\nimport {\n    isGameActive as getIsGameActive,\n    getScore,\n    getHighscore,\n    getStreakType,\n    getStreakCount\n} from '../state/selectors';\nimport { TITLE_URL } from '../config';\n\nexport default function Menu() {\n    const isGameActive = useSelector(getIsGameActive);\n\n    if (!isGameActive) {\n        return null;\n    }\n\n    const highscore = useSelector(getHighscore);\n    const score = useSelector(getScore);\n    const streakCount = useSelector(getStreakCount);\n    const streakType = useSelector(getStreakType);\n\n    const dispatch = useDispatch();\n\n    function getStats() {\n        return (<>\n            <div block=\"stat\">\n                <div block=\"stat\" elem=\"title\">Score</div>\n                <div block=\"stat\" elem=\"value\">{score}</div>\n            </div>\n            <div block=\"stat\">\n                <div block=\"stat\" elem=\"title\">Streak</div>\n                <div block=\"stat\" elem=\"square\">\n                    <div block=\"square\" mods={{type: streakType}}></div>\n                </div>\n                <div block=\"stat\" elem=\"value\">{streakCount}</div>\n            </div>\n            <div block=\"stat\">\n                <div block=\"stat\" elem=\"title\">Highscore</div>\n                <div block=\"stat\" elem=\"value\">{highscore}</div>\n            </div>\n        </>);\n    }\n\n    return (\n        <div block=\"menu\" mods={{main: true}}>\n            {getStats()}\n\n            <div block=\"action\">\n                <Link to={TITLE_URL}>Back</Link>\n            </div>\n            <div\n                block=\"action\"\n                onClick={() => dispatch(requestStartGame())}\n            >\n                New Game\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestAssureGame } from '../state/actions';\nimport { isGameActive } from '../state/selectors';\nimport Board from './Board';\nimport Menu from './Menu';\n\nexport default function Game() {\n    const isActive = useSelector(isGameActive);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(requestAssureGame());\n    });\n\n    if (!isActive) {\n        return null;\n    }\n\n    return (<>\n        <Board />\n        <Menu />\n    </>);\n}\n","import range from 'ramda/src/range';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BOARD_SIZE, GAME_URL, OPTIONS_URL, TUTORIAL_URL } from '../config';\n\nexport default function Title() {\n    const squares = range(0, BOARD_SIZE ** 2).map((index) => {\n        return (\n            <div block=\"board\" elem=\"square\">\n                <div\n                    key={index}\n                    block=\"square\"\n                    mods={{type: 1}}\n                ></div>\n            </div>\n        );\n    });\n\n    return (<>\n        <div block=\"board\">\n            <div block=\"board\" elem=\"title\">Quood</div>\n\n            {squares}\n        </div>\n\n        <div block=\"menu\" mods={{small: true}}>\n            <div block=\"action\">\n                <Link to={GAME_URL}>Play</Link>\n            </div>\n            <div block=\"action\">\n                <Link to={OPTIONS_URL}>Options</Link>\n            </div>\n            <div block=\"action\">\n                <Link to={TUTORIAL_URL}>Tutorial</Link>\n            </div>\n        </div>\n    </>);\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getTutorialMessage } from '../state/selectors';\nimport { TITLE_URL } from '../config';\nimport Board from './Board';\n\nexport default function Tutorial() {\n    const message = useSelector(getTutorialMessage);\n\n    return (<>\n        <Board />\n        <div block=\"menu\">\n            <div block=\"message\">{message}</div>\n\n            <div block=\"action\">\n                <Link to={TITLE_URL}>Back</Link>\n            </div>\n        </div>\n    </>);\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getHues } from '../state/selectors';\nimport { changeHue } from '../state/actions';\nimport { DraggingOverlay } from './DraggingOverlay';\n\nexport default function Slider({index}) {\n    const hues = useSelector(getHues);\n    const hue = hues[index];\n    const dispatch = useDispatch();\n\n    function onDragUpdate(_, end) {\n        dispatch(changeHue(index, end.x * 360 | 0));\n    }\n\n    return (\n        <div block=\"slider\">\n            <div block=\"slider\" elem=\"square\">\n                <div block=\"square\" mods={{type: index}}></div>\n            </div>\n            <div block=\"slider\" elem=\"bar-border\">\n                <DraggingOverlay\n                    onDragUpdate={onDragUpdate}\n                    onDragAbort={() => {}}\n                    onDragEnd={() => {}}\n                    isLocked={false}\n                />\n                <div block=\"slider\" elem=\"bar\"\n                style={{width: `${hue / 3.6}%`}}>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport range from 'ramda/src/range';\nimport { Link } from 'react-router-dom';\nimport { SQUARE_TYPES, TITLE_URL } from '../config';\nimport { resetHues } from '../state/actions';\nimport Slider from './Slider';\n\nexport default function Options() {\n    const sliders = range(0, SQUARE_TYPES).map((type) => {\n        return <Slider key={type} index={type} />\n    });\n\n    const dispatch = useDispatch();\n\n    return (\n        <div block=\"menu\">\n            <div block=\"menu\" elem=\"block\">\n                <div block=\"options-headline\">Square Colors</div>\n                {sliders}\n                <div block=\"action\" onClick={() => dispatch(resetHues())}>\n                    Reset\n                </div>\n            </div>\n            <div block=\"action\">\n                <Link to={TITLE_URL}>Back</Link>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport persistState from 'redux-localstorage';\nimport { Switch, Route } from 'react-router';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport createReducers from './state/reducers';\nimport saga from './sagas';\nimport Game from './components/Game';\nimport Title from './components/Title';\nimport Tutorial from './components/Tutorial';\nimport { TITLE_URL, GAME_URL, TUTORIAL_URL, OPTIONS_URL } from './config';\nimport Options from './components/Options';\nimport CustomProperties from './components/CustomProperties';\n\nfunction slicePersistedState(paths) {\n    return (state) => {\n        const persist = {...state};\n        delete persist.selection;\n        delete persist.tutorial;\n\n        return persist;\n    };\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst history = createHashHistory();\n\nconst store = createStore(\n    createReducers(history),\n    compose(\n        persistState('', {slicer: slicePersistedState, key: 'quood'}),\n        applyMiddleware(\n            routerMiddleware(history),\n            sagaMiddleware\n        )\n    )\n);\n\nsagaMiddleware.run(saga);\n\nReactDOM.render((\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <CustomProperties>\n                <Switch>\n                    <Route exact path={TITLE_URL} render={() => <Title />} />\n                    <Route exact path={GAME_URL} render={() => <Game />} />\n                    <Route exact path={TUTORIAL_URL} render={() => <Tutorial />} />\n                    <Route exact path={OPTIONS_URL} render={() => <Options />} />\n                </Switch>\n            </CustomProperties>\n        </ConnectedRouter>\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport fromPairs from 'ramda/src/fromPairs';\nimport { getHues } from '../state/selectors';\n\nexport default function CustomProperties({children}) {\n    const hues = useSelector(getHues);\n\n    const properties = fromPairs(hues.map(\n        (value, index) => [`--hue${index}`, value]\n    ));\n\n    return <div style={properties}>\n        {children}\n    </div>;\n}\n"],"sourceRoot":""}