{"version":3,"sources":["serviceWorker.js","state/reducers/game.js","state/reducers/highscore.js","config.js","state/reducers/options.js","vectors.js","state/reducers/selection.js","state/reducers/tutorial.js","state/reducers.js","state/actions.js","state/selectors.js","sagas.js","components/Square.js","components/DraggingOverlay.js","components/GridDraggingOverlay.js","components/ClickOverlay.js","components/GridClickOverlay.js","components/Board.js","components/Menu.js","components/Game.js","components/Title.js","components/Tutorial.js","components/HueSlider.js","components/Options.js","index.js","components/CustomProperties.js"],"names":["Boolean","window","location","hostname","match","defaultGame","board","bucket","score","streak","gameReducers","handleActions","START_GAME","_","_ref","payload","Object","objectSpread","REPLACE_SQUARES","game","_ref2","_ref2$payload","indexes","values","size","toConsumableArray","type","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","pop","err","return","streakCount","count","highscoreReducers","UPDATE_HIGHSCORE","highscore","Math","max","BOARD_SIZE","SQUARE_TYPES","TITLE_URL","GAME_URL","OPTIONS_URL","TUTORIAL_URL","INPUT_MODE_TOUCH","INPUT_MODE_CLICK","defaultHues","Array","fill","defaultOptions","hues","inputMode","optionsReducers","CHANGE_HUE","options","_ref$payload","index","hue","RESET_HUES","CHANGE_INPUT_MODE","rotate90Around","curry","center","v","times","x","y","add","rotate90","_ref7","_ref3","_ref4","sub","defaultSelection","squares","hidden","selectionReducers","UPDATE_SELECTION","selection","start","end","newSelection","getSelection","equals","DISCARD_SELECTION","HIDE_SELECTION","length","ADVANCE_TUTORIAL","_ref8","_ref9","x2","y2","hypot","distance","uniq","range","map","_ref5","_ref6","r","tween","filter","isValid","isValidType","typeEquals","getType","toIndex","defaultTutorial","message","step","tutorialReducers","tutorial","patchReducer","state","createActions","REQUEST_ASSURE_GAME","REQUEST_START_GAME","requestAssureGame","requestStartGame","startGame","replaceSquares","updateSelection","discardSelection","hideSelection","updateHighscore","advanceTutorial","changeInputMode","changeHue","resetHues","getStreak","getBoard","router","pathname","getBucket","getScore","getHighscore","isGameActive","createSelector","getGame","active","getStreakType","getStreakCount","getSelectedSquares","getSelectionSize","isSelectionHidden","isBoardLocked","getSquare","includes","inactive","ready","isTutorial","getTutorialMessage","getOptions","getInputMode","getHues","onHideSelection","onReplaceSquares","onRequestStartGame","onRequestAssureGame","getRandom","min","arguments","reduce","slicedToArray","random","splice","concat","_getRandom","_getRandom2","regenerator_default","a","wrap","_context","prev","select","sent","abrupt","call","delay","put","stop","_marked","this","_context2","_marked2","_getRandom3","_getRandom4","_context3","pow","_marked3","_getRandom5","_getRandom6","_context4","_marked4","_callee","_context5","takeEvery","_marked5","Square","square","useSelector","_checkBEM","react_default","block","mods","DraggingOverlay","props","ref","useRef","_useState","useState","_useState2","dragStart","setDragStart","style","height","position","width","zIndex","abortDragging","isLocked","onDragAbort","DraggingOverlay_checkBEM","touch-action","onPointerDown","event","getPosition","onDragUpdate","startDragging","onPointerUp","onDragEnd","onPointerMove","updatePosition","onPointerCancel","onPointerLeave","onPointerOut","onLostPointerCapture","_ref$current$getBound","current","getBoundingClientRect","offsetX","offsetY","pageX","pageY","_ref$current","offsetWidth","offsetHeight","GridDraggingOverlay","gridSize","lastEnd","setLastEnd","GridDraggingOverlay_checkBEM","Fragment","gridStart","gridEnd","ClickOverlay","onClick","onMouseMove","_ref$zIndex","ClickOverlay_checkBEM","GridClickOverlay","setStart","_useState3","_useState4","setEnd","GridClickOverlay_checkBEM","gridPosition","Board","getIsBoardLocked","dispatch","useDispatch","Board_checkBEM","elem","key","Menu","getIsGameActive","streakType","Menu_checkBEM","main","react_router_dom","to","Game","isActive","useEffect","Game_checkBEM","Title","Title_checkBEM","small","Tutorial","Tutorial_checkBEM","HueSlider","HueSlider_checkBEM","Options","sliders","Options_checkBEM","history","sagaMiddleware","createSagaMiddleware","createHashHistory","store","createStore","reduceReducers","combineReducers","connectRouter","compose","persistState","slicer","paths","persist","applyMiddleware","routerMiddleware","run","saga","ReactDOM","render","src_checkBEM","es","esm","children","properties","fromPairs","CustomProperties_checkBEM","react_router","exact","path","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf53d17b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\n\nconst defaultGame = {\n    board: null,\n    bucket: [],\n    score: 0,\n    streak: null,\n};\n\nconst gameReducers = handleActions({\n    START_GAME: (_, {payload: {board}}) => {\n        return {\n            ...defaultGame,\n            board,\n        };\n    },\n    REPLACE_SQUARES: (game, {payload: {indexes, values, size, bucket}}) => {\n        const board = [...game.board];\n        const type = board[indexes[0]];\n\n        for (const index of indexes) {\n            board[index] = values.pop();\n        }\n\n        const streakCount = game.streak && game.streak.type === type ? game.streak.count + 1 : 1;\n        const score = game.score + (size | 0) * streakCount;\n        const streak = {\n            count: streakCount,\n            type,\n        };\n\n        return {\n            board,\n            bucket,\n            score,\n            streak,\n        }\n    }\n}, null);\n\nexport default gameReducers;\n","import { handleActions } from 'redux-actions';\n\nconst highscoreReducers = handleActions({\n    UPDATE_HIGHSCORE: (highscore, { payload: { score } }) => {\n        return Math.max(highscore, score);\n    }\n}, 0);\n\nexport default highscoreReducers;\n","// Size and types exist to have named constants. Changing them requires more work.\nexport const BOARD_SIZE = 7;\nexport const SQUARE_TYPES = 3;\n\nexport const TITLE_URL = '/';\nexport const GAME_URL = '/play';\nexport const OPTIONS_URL = '/options';\nexport const TUTORIAL_URL = '/tutorial';\n","import { handleActions } from 'redux-actions';\nimport { SQUARE_TYPES } from '../../config';\n\nexport const INPUT_MODE_TOUCH = 'TOUCH';\nexport const INPUT_MODE_CLICK = 'CLICK';\n\nexport const defaultHues = Array(SQUARE_TYPES).fill(0);\n\nexport const defaultOptions = {\n    hues: defaultHues,\n    inputMode: INPUT_MODE_TOUCH\n};\n\nconst optionsReducers = handleActions({\n    CHANGE_HUE: (options, { payload: { index, hue } }) => {\n        const hues = [...options.hues];\n        hues[index] = hue;\n\n        return {\n            ...options,\n            hues\n        };\n    },\n    RESET_HUES: (options) => {\n        return {\n            ...options,\n            hues: defaultHues,\n        };\n    },\n    CHANGE_INPUT_MODE: (options) => {\n        return {\n            ...options,\n            inputMode:\n                options.inputMode === INPUT_MODE_CLICK\n                    ? INPUT_MODE_TOUCH\n                    : INPUT_MODE_CLICK\n        }\n    }\n}, defaultOptions);\n\nexport default optionsReducers;\n","import curry from 'ramda/src/curry';\n\nexport const add = ({x, y}, {x: x2, y: y2}) => ({x: x + x2, y: y + y2});\n\nexport const sub = ({x, y}, {x: x2, y: y2}) => ({x: x - x2, y: y - y2});\n\nexport const tween = ({x, y}, {x: x2, y: y2}, r) => ({x: x * r + x2 * (1 - r), y: y * r + y2 * (1 - r)});\n\nexport const rotate90 = ({x, y}, times) => times ? rotate90({x: y, y: -x}, times - 1) : {x, y};\n\nexport const rotate90Around = curry((center, v, times) => add(rotate90(sub(v, center), times), center));\n\nexport const distance = ({x, y}, {x: x2, y: y2}) => Math.hypot(x - x2, y - y2);\n","import curry from 'ramda/src/curry';\nimport equals from 'ramda/src/equals';\nimport range from 'ramda/src/range';\nimport uniq from 'ramda/src/uniq';\nimport { handleActions } from 'redux-actions';\nimport { BOARD_SIZE, SQUARE_TYPES } from '../../config';\nimport { distance, rotate90Around, tween } from '../../vectors';\n\nexport const defaultSelection = {\n    squares: [],\n    size: 0,\n    hidden: false,\n};\n\nexport const selectionReducers = handleActions({\n    START_GAME: () => {\n        return defaultSelection;\n    },\n    UPDATE_SELECTION: (selection, {payload: {board, start, end}}) => {\n        const newSelection = getSelection(board, start, end);\n\n        if (equals(newSelection.squares, selection.squares)) {\n            return selection;\n        }\n\n        return newSelection;\n    },\n    DISCARD_SELECTION: () => {\n        return defaultSelection;\n    },\n    HIDE_SELECTION: (selection) => {\n        if (selection.squares.length < 4) {\n            return defaultSelection;\n        }\n\n        return {\n            ...selection,\n            hidden: true,\n        };\n    },\n    REPLACE_SQUARES: () => {\n        return defaultSelection;\n    },\n    ADVANCE_TUTORIAL: () => {\n        return defaultSelection;\n    }\n}, defaultSelection);\n\nexport default selectionReducers;\n\nconst getSelection = (board, start, end) => ({\n    ...defaultSelection,\n    size: distance(start, end),\n    squares: uniq(\n        range(0, 4)\n            .map(rotate90Around(tween(start, end, 0.5), start))\n            .filter(isValid)\n            .filter(isValidType(board))\n            .filter(typeEquals(board, getType(board, start)))\n            .map(toIndex)\n    ),\n});\n\nconst toIndex = curry(({x, y}) => x + y * BOARD_SIZE);\nconst isValid = ({x, y}) =>\n    0 <= x && x < BOARD_SIZE && x % 1 === 0 &&\n    0 <= y && y < BOARD_SIZE && y % 1 === 0;\nconst getType = (board, v) => board[toIndex(v)];\nconst typeEquals = curry((board, type, v) => getType(board, v) === type);\nconst isValidType = curry((board, v) => getType(board, v) < SQUARE_TYPES);\n","import { handleActions } from 'redux-actions';\n\nexport const defaultTutorial = {\n    board: [\n        [\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 1, 3, 1, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 1, 3, 1, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n        ],\n        [\n            3, 3, 0, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 0,\n            3, 3, 3, 3, 3, 3, 3,\n            0, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 0, 3, 3,\n        ],\n        [\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 0, 0, 3, 3, 3, 3,\n            3, 0, 0, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n            3, 3, 3, 3, 3, 3, 3,\n        ],\n        [\n            3, 0, 3, 3, 1, 3, 3,\n            3, 2, 1, 3, 3, 0, 3,\n            3, 3, 3, 3, 0, 3, 3,\n            3, 3, 3, 1, 2, 1, 0,\n            3, 2, 3, 2, 2, 3, 3,\n            3, 0, 3, 1, 3, 0, 3,\n            3, 3, 3, 3, 3, 3, 3,\n        ],\n    ],\n    message: [\n        `Hi there. Find a square with corners of the same color\n         and remove it by connecting two opposite corners.`,\n        `Squares have different sizes and orientations.\n         Remove bigger squares to yield a higher score.`,\n        `Removing multiple squares of the same color in a row\n         will multiply your score.`,\n        `The game does not stop if there are no more squares\n         to remove. It’s up to you to call it quits.`\n    ],\n    step: 0\n}\n\nconst tutorialReducers = handleActions({\n    ADVANCE_TUTORIAL: (tutorial) => {\n        return {\n            ...tutorial,\n            step: tutorial.step + 1\n        };\n    }\n}, defaultTutorial);\n\nexport default tutorialReducers;\n","import { connectRouter } from 'connected-react-router';\nimport reduceReducers from 'reduce-reducers';\nimport { combineReducers } from 'redux';\nimport gameReducers from './reducers/game';\nimport highscoreReducers from './reducers/highscore';\nimport optionsReducers, { INPUT_MODE_TOUCH } from './reducers/options';\nimport selectionReducers, { defaultSelection } from './reducers/selection';\nimport tutorialReducers, { defaultTutorial } from './reducers/tutorial';\n\nfunction patchReducer(state) {\n    if (!state.selection) {\n        state = {\n            ...state,\n            selection: defaultSelection,\n            tutorial: defaultTutorial,\n        }\n    }\n\n    if (!state.options.inputMode) {\n        state.options.inputMode = INPUT_MODE_TOUCH;\n    }\n\n    return state;\n}\n\nexport default (history) => reduceReducers(\n    combineReducers({\n        router: connectRouter(history),\n        game: gameReducers,\n        tutorial: tutorialReducers,\n        highscore: highscoreReducers,\n        selection: selectionReducers,\n        options: optionsReducers,\n    }),\n    patchReducer,\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n    requestAssureGame,\n    requestStartGame,\n    startGame,\n    replaceSquares,\n    updateSelection,\n    discardSelection,\n    hideSelection,\n    updateHighscore,\n    advanceTutorial,\n    changeInputMode,\n    changeHue,\n    resetHues,\n} = createActions({\n    REQUEST_ASSURE_GAME: () => ({\n    }),\n    REQUEST_START_GAME: () => ({\n    }),\n    START_GAME: (board) => ({\n        board,\n    }),\n    REPLACE_SQUARES: (indexes, values, size, bucket) => ({\n        indexes,\n        values,\n        size,\n        bucket,\n    }),\n    UPDATE_SELECTION: (board, start, end) => ({\n        board,\n        start,\n        end,\n    }),\n    DISCARD_SELECTION: () => ({}),\n    HIDE_SELECTION: () => ({}),\n    UPDATE_HIGHSCORE: (score) => ({\n        score\n    }),\n    ADVANCE_TUTORIAL: () => ({\n    }),\n    CHANGE_INPUT_MODE: () => ({\n    }),\n    CHANGE_HUE: (index, hue) => ({\n        index,\n        hue,\n    }),\n    RESET_HUES: () => ({}),\n});\n","import { createSelector } from \"reselect\";\nimport { TUTORIAL_URL } from \"../config\";\n\nconst getSelection = (state) => state.selection;\nconst getStreak = (state) => state.game && state.game.streak;\n\nexport const getGame = (state) => state.game;\nexport const getBoard = (state) => {\n    if (state.router.location.pathname === TUTORIAL_URL) {\n        return state.tutorial.board[state.tutorial.step];\n    }\n\n    return state.game && state.game.board;\n}\nexport const getBucket = (state) => state.game && state.game.bucket;\nexport const getScore = (state) => state.game && state.game.score;\nexport const getHighscore = (state) => state.highscore;\n\n// game\n\nexport const isGameActive = createSelector(\n    (state) => !!getGame(state),\n    (active) => active\n);\n\n// stats\n\nexport const getStreakType = createSelector(\n    getStreak,\n    (streak) => streak && streak.type\n);\n\nexport const getStreakCount = createSelector(\n    getStreak,\n    (streak) => streak && streak.count\n);\n\n// board\n\nexport const getSelectedSquares = createSelector(\n    getSelection,\n    (selection) => selection.squares\n);\n\nexport const getSelectionSize = createSelector(\n    getSelection,\n    (selection) => selection.size\n);\n\nexport const isSelectionHidden = createSelector(\n    getSelection,\n    (selection) => selection.hidden,\n);\n\nexport const isBoardLocked = createSelector(\n    isSelectionHidden,\n    (hidden) => hidden\n);\n\nexport const getSquare = (index) => createSelector(\n    getBoard,\n    getSelectedSquares,\n    isSelectionHidden,\n    (board, squares, hidden) => {\n        const active = squares.includes(index);\n\n        return {\n            type: board && board[index],\n            active,\n            inactive: squares.length > 0 && !active,\n            hidden: hidden && active,\n            ready: squares.length === 4 && active,\n        };\n    }\n);\n\n// tutorial\n\nexport const isTutorial = (state) => state.router.location.pathname === TUTORIAL_URL;\n\nexport const getTutorialMessage = (state) => state.tutorial.message[state.tutorial.step];\n\n// options\n\nconst getOptions = (state) => state.options;\n\nexport const getInputMode = createSelector(\n    getOptions,\n    (options) => options.inputMode\n)\n\nexport const getHues = createSelector(\n    getOptions,\n    (options) => options.hues\n)\n","import delay from 'delay';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { replaceSquares, startGame, updateHighscore, advanceTutorial } from './state/actions';\nimport { BOARD_SIZE } from './config';\nimport { isSelectionHidden, getBucket, getScore, getSelectionSize, getSelectedSquares, isGameActive, isTutorial } from './state/selectors';\n\nfunction getRandom(bucket, count, min=0, max=3, size=2) {\n    return [...Array(count)].reduce(([values, bucket]) => {\n        bucket = [...bucket];\n\n        if (bucket.length === 0) {\n            bucket = [...Array((max - min) * size)].map((_, index) => {\n                return index % (max - min) + min;\n            });\n        }\n\n        const index = Math.random() * bucket.length | 0;\n        const value = bucket.splice(index, 1)[0];\n\n        return [[...values, value], bucket];\n    }, [[], bucket]);\n}\n\nfunction* onHideSelection() {\n    const state = yield select();\n\n    if (!isSelectionHidden(state)) {\n        return;\n    }\n\n    yield call(delay, 500);\n\n    if (isTutorial(state)) {\n        yield put(advanceTutorial());\n\n        return;\n    }\n\n    const [values, bucket] = getRandom(getBucket(state), 4);\n\n    yield put(replaceSquares(getSelectedSquares(state), values, getSelectionSize(state), bucket));\n}\n\nfunction* onReplaceSquares() {\n    const state = yield select();\n\n    yield put(updateHighscore(getScore(state)));\n}\n\nfunction* onRequestStartGame() {\n    const [values] = getRandom([], BOARD_SIZE ** 2);\n\n    yield put(startGame(values));\n}\n\nfunction* onRequestAssureGame() {\n    const state = yield select();\n\n    if (!isGameActive(state)) {\n        const [values] = getRandom([], BOARD_SIZE ** 2);\n\n        yield put(startGame(values));\n    }\n}\n\nexport default function* () {\n    yield takeEvery('HIDE_SELECTION', onHideSelection);\n    yield takeEvery('REPLACE_SQUARES', onReplaceSquares);\n    yield takeEvery('REQUEST_ASSURE_GAME', onRequestAssureGame);\n    yield takeEvery('REQUEST_START_GAME', onRequestStartGame);\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSquare } from '../state/selectors';\n\nexport default function Square({index}) {\n    const square = useSelector(getSquare(index));\n\n    return <button block=\"square\" mods={square}></button>;\n}\n","import React, {useRef, useState} from 'react';\n\nexport function DraggingOverlay(props) {\n    const ref = useRef();\n    const [dragStart, setDragStart] = useState(null);\n\n    const style = {\n        height: '100%',\n        position: 'absolute',\n        width: '100%',\n        zIndex: props.zIndex === undefined ? 10000 : props.zIndex,\n    };\n\n    function startDragging(event) {\n        if (props.isLocked) {\n            return;\n        }\n\n        const position = getPosition(event, ref);\n\n        setDragStart(position);\n        props.onDragUpdate(position, position);\n    }\n\n    function finishDragging() {\n        if (props.isLocked || !dragStart) {\n            return;\n        }\n\n        setDragStart(null);\n        props.onDragEnd();\n    }\n\n    function abortDragging() {\n        if (props.isLocked || !dragStart) {\n            return;\n        }\n\n        setDragStart(null);\n        props.onDragAbort();\n    }\n\n    function updatePosition(event) {\n        if (dragStart) {\n            props.onDragUpdate(dragStart, getPosition(event, ref));\n        }\n    }\n\n    return (\n        <div\n            style={style}\n            touch-action=\"none\"\n            onPointerDown={(event) => startDragging(event) }\n            onPointerUp={(event) => finishDragging(event) }\n            onPointerMove={(event) => updatePosition(event)}\n            onPointerCancel={() => abortDragging()}\n            onPointerLeave={() => abortDragging()}\n            onPointerOut={() => abortDragging()}\n            onLostPointerCapture={() => abortDragging()}\n            ref={ref}\n        >\n        </div>\n    );\n}\n\nfunction getPosition(event, ref) {\n    const {x: offsetX, y: offsetY} = ref.current.getBoundingClientRect();\n    const {pageX, pageY} = event;\n    const {offsetWidth, offsetHeight} = ref.current;\n    const x = (pageX - offsetX) / offsetWidth;\n    const y = (pageY - offsetY) / offsetHeight;\n\n    return {x, y};\n}\n","import React, { useState } from 'react';\nimport { DraggingOverlay } from './DraggingOverlay';\n\nexport function GridDraggingOverlay({\n    active,\n    gridSize,\n    isLocked,\n    onDragAbort,\n    onDragEnd,\n    onDragUpdate\n}) {\n    const [lastEnd, setLastEnd] = useState(null);\n\n    if (!active) {\n        return <></>;\n    }\n\n    function dragUpdate(start, end) {\n        const gridStart = {\n            x: start.x * gridSize | 0,\n            y: start.y * gridSize | 0,\n        };\n        const gridEnd = {\n            x: end.x * gridSize | 0,\n            y: end.y * gridSize | 0,\n        };\n\n        if (lastEnd && end.x === lastEnd.x && end.y === lastEnd.y) {\n            return;\n        }\n\n        setLastEnd(end);\n\n        onDragUpdate(gridStart, gridEnd);\n    }\n\n    function dragAbort() {\n        setLastEnd(null);\n\n        onDragAbort();\n    }\n\n    function dragEnd() {\n        setLastEnd(null);\n\n        onDragEnd();\n    }\n\n    return (\n        <DraggingOverlay\n            onDragAbort={dragAbort}\n            onDragEnd={dragEnd}\n            onDragUpdate={dragUpdate}\n            isLocked={isLocked}\n        />\n    );\n}\n","import React, { useRef } from 'react';\n\nexport default function ClickOverlay({\n    onClick,\n    onMouseMove,\n    zIndex = 10000\n}) {\n    const ref = useRef();\n\n    const style = {\n        height: '100%',\n        position: 'absolute',\n        width: '100%',\n        zIndex,\n    };\n\n    function click(event) {\n        onClick(getPosition(event, ref));\n    }\n\n    function mouseMove(event) {\n        onMouseMove(getPosition(event, ref));\n    }\n\n    return <div\n        onClick={click}\n        onMouseMove={mouseMove}\n        ref={ref}\n        style={style}\n    ></div>;\n}\n\nfunction getPosition(event, ref) {\n    const {x: offsetX, y: offsetY} = ref.current.getBoundingClientRect();\n    const {pageX, pageY} = event;\n    const {offsetWidth, offsetHeight} = ref.current;\n    const x = (pageX - offsetX) / offsetWidth;\n    const y = (pageY - offsetY) / offsetHeight;\n\n    return {x, y};\n}\n","import React, { useState } from 'react';\nimport ClickOverlay from './ClickOverlay';\n\nexport default function GridClickOverlay({\n    active,\n    gridSize,\n    onDragAbort,\n    onDragEnd,\n    onDragUpdate,\n    isLocked\n}) {\n    const [start, setStart] = useState(null);\n    const [end, setEnd] = useState(null);\n\n    if (!active) {\n        return <></>;\n    }\n\n    function click(position) {\n        if (isLocked) {\n            return;\n        }\n\n        const gridPosition = {\n            x: position.x * gridSize | 0,\n            y: position.y * gridSize | 0,\n        };\n\n        if (!start) {\n            setStart(gridPosition);\n            setEnd(gridPosition);\n            onDragUpdate(gridPosition, gridPosition);\n        } else if (gridPosition.x === start.x && gridPosition.y === start.y) {\n            setStart(null);\n            setEnd(null);\n            onDragAbort();\n        } else {\n            setStart(null);\n            setEnd(null);\n            onDragEnd();\n        }\n    }\n\n    function mouseMove(position) {\n        if (isLocked || !start) {\n            return;\n        }\n\n        const gridPosition = {\n            x: position.x * gridSize | 0,\n            y: position.y * gridSize | 0,\n        };\n\n        if (end && gridPosition.x === end.x && gridPosition.y === end.y) {\n            return;\n        }\n\n        setEnd(gridPosition);\n\n        onDragUpdate(start, gridPosition);\n    }\n\n    return <ClickOverlay\n        onClick={click}\n        onMouseMove={mouseMove}\n    ></ClickOverlay>;\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport range from 'ramda/src/range';\nimport { updateSelection, hideSelection, discardSelection } from '../state/actions';\nimport { isBoardLocked as getIsBoardLocked, getBoard, getInputMode } from '../state/selectors';\nimport { BOARD_SIZE } from '../config';\nimport Square from './Square';\nimport { GridDraggingOverlay } from './GridDraggingOverlay';\nimport { INPUT_MODE_TOUCH, INPUT_MODE_CLICK } from '../state/reducers/options';\nimport GridClickOverlay from './GridClickOverlay';\n\nexport default function Board() {\n    const board = useSelector(getBoard);\n    const isBoardLocked = useSelector(getIsBoardLocked);\n    const inputMode = useSelector(getInputMode);\n    const dispatch = useDispatch();\n\n    const squares = range(0, BOARD_SIZE ** 2).map((index) => {\n        return (\n            <div block=\"board\" elem=\"square\" key={index}>\n                <Square\n                    index={index}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <div block=\"board\">\n            <GridDraggingOverlay\n                active={inputMode === INPUT_MODE_TOUCH}\n                gridSize={BOARD_SIZE}\n                onDragEnd={() => dispatch(hideSelection())}\n                onDragUpdate={(start, end) => dispatch(updateSelection(board, start, end))}\n                onDragAbort={() => dispatch(discardSelection())}\n                isLocked={isBoardLocked}\n            />\n            <GridClickOverlay\n                active={inputMode === INPUT_MODE_CLICK}\n                gridSize={BOARD_SIZE}\n                onDragEnd={() => dispatch(hideSelection())}\n                onDragUpdate={(start, end) => dispatch(updateSelection(board, start, end))}\n                onDragAbort={() => dispatch(discardSelection())}\n                isLocked={isBoardLocked}\n            >\n            </GridClickOverlay>\n\n            {squares}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { requestStartGame } from '../state/actions';\nimport {\n    isGameActive as getIsGameActive,\n    getScore,\n    getHighscore,\n    getStreakType,\n    getStreakCount\n} from '../state/selectors';\nimport { TITLE_URL } from '../config';\n\nexport default function Menu() {\n    const isGameActive = useSelector(getIsGameActive);\n\n    if (!isGameActive) {\n        return null;\n    }\n\n    const highscore = useSelector(getHighscore);\n    const score = useSelector(getScore);\n    const streakCount = useSelector(getStreakCount);\n    const streakType = useSelector(getStreakType);\n\n    const dispatch = useDispatch();\n\n    function getStats() {\n        return (<>\n            <div block=\"stat\">\n                <div block=\"stat\" elem=\"title\">Score</div>\n                <div block=\"stat\" elem=\"value\">{score}</div>\n            </div>\n            <div block=\"stat\">\n                <div block=\"stat\" elem=\"title\">Streak</div>\n                <div block=\"stat\" elem=\"square\">\n                    <div block=\"square\" mods={{type: streakType}}></div>\n                </div>\n                <div block=\"stat\" elem=\"value\">{streakCount}</div>\n            </div>\n            <div block=\"stat\">\n                <div block=\"stat\" elem=\"title\">Highscore</div>\n                <div block=\"stat\" elem=\"value\">{highscore}</div>\n            </div>\n        </>);\n    }\n\n    return (\n        <div block=\"menu\" mods={{main: true}}>\n            {getStats()}\n\n            <div block=\"action\">\n                <Link to={TITLE_URL}>Back</Link>\n            </div>\n            <div\n                block=\"action\"\n                onClick={() => dispatch(requestStartGame())}\n            >\n                New Game\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestAssureGame } from '../state/actions';\nimport { isGameActive } from '../state/selectors';\nimport Board from './Board';\nimport Menu from './Menu';\n\nexport default function Game() {\n    const isActive = useSelector(isGameActive);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(requestAssureGame());\n    });\n\n    if (!isActive) {\n        return null;\n    }\n\n    return (<>\n        <Board />\n        <Menu />\n    </>);\n}\n","import range from 'ramda/src/range';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BOARD_SIZE, GAME_URL, OPTIONS_URL, TUTORIAL_URL } from '../config';\n\nexport default function Title() {\n    const squares = range(0, BOARD_SIZE ** 2).map((index) => {\n        return (\n            <div block=\"board\" elem=\"square\">\n                <div\n                    key={index}\n                    block=\"square\"\n                    mods={{type: 1}}\n                ></div>\n            </div>\n        );\n    });\n\n    return (<>\n        <div block=\"board\">\n            <div block=\"board\" elem=\"title\">Quood</div>\n\n            {squares}\n        </div>\n\n        <div block=\"menu\" mods={{small: true}}>\n            <div block=\"action\">\n                <Link to={GAME_URL}>Play</Link>\n            </div>\n            <div block=\"action\">\n                <Link to={OPTIONS_URL}>Options</Link>\n            </div>\n            <div block=\"action\">\n                <Link to={TUTORIAL_URL}>Tutorial</Link>\n            </div>\n        </div>\n    </>);\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getTutorialMessage } from '../state/selectors';\nimport { TITLE_URL } from '../config';\nimport Board from './Board';\n\nexport default function Tutorial() {\n    const message = useSelector(getTutorialMessage);\n\n    return (<>\n        <Board />\n        <div block=\"menu\">\n            <div block=\"message\">{message}</div>\n\n            <div block=\"action\">\n                <Link to={TITLE_URL}>Back</Link>\n            </div>\n        </div>\n    </>);\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getHues } from '../state/selectors';\nimport { changeHue } from '../state/actions';\nimport { DraggingOverlay } from './DraggingOverlay';\n\nexport default function HueSlider({index}) {\n    const hues = useSelector(getHues);\n    const hue = hues[index];\n    const dispatch = useDispatch();\n\n    function onDragUpdate(_, end) {\n        dispatch(changeHue(index, end.x * 360 | 0));\n    }\n\n    return (\n        <div block=\"slider\">\n            <div block=\"slider\" elem=\"square\">\n                <div block=\"square\" mods={{type: index}}></div>\n            </div>\n            <div block=\"slider\" elem=\"bar-border\">\n                <DraggingOverlay\n                    onDragUpdate={onDragUpdate}\n                    onDragAbort={() => {}}\n                    onDragEnd={() => {}}\n                    isLocked={false}\n                />\n                <div block=\"slider\" elem=\"bar\"\n                style={{width: `${hue / 3.6}%`}}>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport range from 'ramda/src/range';\nimport { Link } from 'react-router-dom';\nimport { SQUARE_TYPES, TITLE_URL } from '../config';\nimport { resetHues, changeInputMode } from '../state/actions';\nimport HueSlider from './HueSlider';\nimport { getInputMode } from '../state/selectors';\n\nexport default function Options() {\n    const inputMode = useSelector(getInputMode);\n    const sliders = range(0, SQUARE_TYPES).map((type) => {\n        return <HueSlider key={type} index={type} />\n    });\n\n    const dispatch = useDispatch();\n\n    return (\n        <div block=\"menu\">\n            <div block=\"menu\" elem=\"block\">\n                <div block=\"options-headline\">Input Mode</div>\n                <button block=\"action\" onClick={() => dispatch(changeInputMode())}>\n                    {inputMode}\n                </button>\n            </div>\n            <div block=\"menu\" elem=\"block\">\n                <div block=\"options-headline\">Square Colors</div>\n                {sliders}\n                <button block=\"action\" onClick={() => dispatch(resetHues())}>\n                    Reset\n                </button>\n            </div>\n            <div block=\"action\">\n                <Link to={TITLE_URL}>Back</Link>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport persistState from 'redux-localstorage';\nimport { Switch, Route } from 'react-router';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport createReducers from './state/reducers';\nimport saga from './sagas';\nimport Game from './components/Game';\nimport Title from './components/Title';\nimport Tutorial from './components/Tutorial';\nimport { TITLE_URL, GAME_URL, TUTORIAL_URL, OPTIONS_URL } from './config';\nimport Options from './components/Options';\nimport CustomProperties from './components/CustomProperties';\n\nfunction slicePersistedState(paths) {\n    return (state) => {\n        const persist = {...state};\n        delete persist.selection;\n        delete persist.tutorial;\n\n        return persist;\n    };\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst history = createHashHistory();\n\nconst store = createStore(\n    createReducers(history),\n    compose(\n        persistState('', {slicer: slicePersistedState, key: 'quood'}),\n        applyMiddleware(\n            routerMiddleware(history),\n            sagaMiddleware\n        )\n    )\n);\n\nsagaMiddleware.run(saga);\n\nReactDOM.render((\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <CustomProperties>\n                <Switch>\n                    <Route exact path={TITLE_URL} render={() => <Title />} />\n                    <Route exact path={GAME_URL} render={() => <Game />} />\n                    <Route exact path={TUTORIAL_URL} render={() => <Tutorial />} />\n                    <Route exact path={OPTIONS_URL} render={() => <Options />} />\n                </Switch>\n            </CustomProperties>\n        </ConnectedRouter>\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport fromPairs from 'ramda/src/fromPairs';\nimport { getHues } from '../state/selectors';\n\nexport default function CustomProperties({children}) {\n    const hues = useSelector(getHues);\n\n    const properties = fromPairs(hues.map(\n        (value, index) => [`--hue${index}`, value]\n    ));\n\n    return <div style={properties}>\n        {children}\n    </div>;\n}\n"],"sourceRoot":""}